# Seoggi Kernel Core
# Implements core kernel functionality

# System calls
fn syscall(number, args...) {
    # Dispatch system call based on number
    match number {
        SYS_OPEN -> sys_open(args...)
        SYS_READ -> sys_read(args...)
        SYS_WRITE -> sys_write(args...)
        SYS_CLOSE -> sys_close(args...)
        SYS_FORK -> sys_fork()
        SYS_EXEC -> sys_exec(args...)
        SYS_EXIT -> sys_exit(args...)
        _ -> error("Invalid syscall")
    }
}

# Memory management
fn alloc(size) {
    # Allocate memory
    ptr = mmap(size)
    if ptr == null {
        error("Memory allocation failed")
    }
    return ptr
}

fn free(ptr) {
    # Free memory
    munmap(ptr)
}

# Process management
fn create_process(image, args) {
    # Fork and exec new process
    pid = fork()
    if pid == 0 {
        # Child process
        exec(image, args)
    }
    return pid
}

fn kill_process(pid) {
    # Send SIGTERM to process
    signal(pid, SIGTERM)
}

# Device management
fn register_device(name, ops) {
    # Register device with kernel
    dev = create_device(name)
    dev.ops = ops
    return dev
}

# Network stack
fn create_socket(domain, type, proto) {
    # Create network socket
    sock = socket(domain, type, proto)
    if sock == null {
        error("Socket creation failed")
    }
    return sock
}

fn bind_socket(sock, addr, port) {
    # Bind socket to address/port
    bind(sock, addr, port)
}

# Main kernel init
fn kernel_init() {
    # Initialize kernel subsystems
    init_memory()
    init_processes()
    init_devices()
    init_network()
    
    write("Seoggi kernel initialized")
}
