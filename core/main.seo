# Seoggi Quantum Programming Language
# Main entry point

use std::io;
use std::error;
use core::common::config;
use core::compiler::lexer;

# Main entry point for the Seoggi compiler
fn main() -> Result<(), error::Error> {
    # Load configuration
    let config = config::new("seoggi.json")?;
    
    # Print welcome message
    io::println("Seoggi Quantum Programming Language v0.1.0");
    io::println("Quantum Backend: " + config.quantum_backend());
    io::println("AI Backend: " + config.ai_backend());
    
    # TODO: Add command-line argument parsing
    # TODO: Add file loading and compilation
    # TODO: Add REPL support
    
    Ok(())
}
