# Simple kernel module example

# Module information
name = "simple_module"
version = "1.0"

# Initialize module
write("Loading module " + name + " version " + version)

# Register device
device = register_device("simple_dev")

# Define handlers
fn read_handler(size) {
    write("Reading " + str(size) + " bytes")
    return "Hello from kernel module"
}

fn write_handler(buffer, size) {
    write("Writing " + str(size) + " bytes: " + buffer)
    return size
}

# Set handlers
device.read = read_handler
device.write = write_handler

# Register interrupt
fn handle_interrupt(irq) {
    write("Handling interrupt: " + str(irq))
}

register_interrupt(42, handle_interrupt)
write("Module " + name + " loaded successfully")
