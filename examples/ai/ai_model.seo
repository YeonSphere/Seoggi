# Simple neural network example

# Define model architecture
model = {
    layers: [
        {type: "input", size: 2},
        {type: "hidden", size: 4, activation: "relu"},
        {type: "output", size: 1, activation: "sigmoid"}
    ]
}

# Training data (XOR problem)
data = [
    {input: [0, 0], output: 0},
    {input: [0, 1], output: 1},
    {input: [1, 0], output: 1},
    {input: [1, 1], output: 0}
]

# Train model
write("Training XOR model...")

epochs = 1000
for epoch in range(epochs) {
    error = 0
    for sample in data {
        pred = predict(model, sample.input)
        error = error + abs(pred - sample.output)
    }
    
    if epoch % 100 == 0 {
        write("Epoch " + str(epoch) + "/" + str(epochs) + ", Error: " + str(error))
    }
}

# Test model
write("\nTesting model:")
for sample in data {
    input_str = str(sample.input[0]) + "," + str(sample.input[1])
    pred = predict(model, sample.input)
    write("Input: " + input_str + " -> Predicted: " + str(pred) + ", Expected: " + str(sample.output))
}
