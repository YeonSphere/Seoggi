# Seoggi documentation generator
use std::io;
use std::error;
use core::compiler::lexer;
use core::compiler::parser;
use core::compiler::ast;
use core::common::config;

fn main() -> Result<(), error::Error> {
    # Parse command line arguments
    let args = parse_args()?;
    
    # Load documentation configuration
    let config = config::new(args.config_file)?;
    
    # Initialize documentation generator
    let mut generator = DocGenerator::new()
        .with_lexer(lexer::new())
        .with_parser(parser::new())
        .with_template(config.template_dir)
        .with_output_dir(args.output_dir);
    
    # Generate documentation
    for file in args.input_files {
        let ast = generator.parse(file)?;
        let docs = generator.extract_docs(ast)?;
        generator.generate(docs)?;
    }
    
    # Generate index
    generator.generate_index()?;
    
    Ok(())
}
