#!/usr/bin/env bash

# YeonSphere Universal Open Source License (YUOSL)
# Copyright (c) 2024 Jeremy Matlock (@daedaevibin)
# All rights reserved.
# See LICENSE for full terms.

# Seoggi Command Line Tool (seo)
# This tool provides a command-line interface for the Seoggi programming language

# Environment setup
if [ -z "$SEOGGI_ROOT" ]; then
    echo "Error: SEOGGI_ROOT environment variable not set"
    exit 1
fi

# Helper function to find Seoggi files
find_seo_file() {
    local file="$1"
    
    # Check if file exists as is
    if [ -f "$file" ]; then
        echo "$file"
        return 0
    fi
    
    # Check if file exists with .seo extension
    if [ -f "$file.seo" ]; then
        echo "$file.seo"
        return 0
    fi
    
    # Check in examples directory
    if [ -f "$SEOGGI_ROOT/examples/$file" ]; then
        echo "$SEOGGI_ROOT/examples/$file"
        return 0
    fi
    
    if [ -f "$SEOGGI_ROOT/examples/$file.seo" ]; then
        echo "$SEOGGI_ROOT/examples/$file.seo"
        return 0
    fi

    return 1
}

# Function to show usage
show_usage() {
    echo "Seoggi Programming Language"
    echo "Usage: seo <command> [arguments]"
    echo ""
    echo "Commands:"
    echo "  build <target>  Build a Seoggi project"
    echo "  compile <file>  Compile a Seoggi source file"
    echo "  exec <file>     Execute a Seoggi program"
    echo "  run [file]      Run a program or start REPL mode"
    echo "  test [path]     Run tests in the specified path"
    echo "  version         Show version information"
    echo "  help            Show this help message"
    echo ""
    echo "Examples:"
    echo "  seo build .         # Build current project"
    echo "  seo compile foo.seo # Compile foo.seo to executable"
    echo "  seo exec hello.seo  # Run hello.seo"
    echo "  seo run             # Start REPL"
    echo "  seo run app.seo     # Run app.seo"
    echo "  seo test            # Run all tests"
    echo "  seo test core/      # Run tests in core/"
    echo "  seo version         # Show version"
    echo "  seo help            # Show help"
}

# Main command handling
case "$1" in
    "build")
        target="${2:-.}"  # Default to current directory if no target specified
        if [ ! -f "$target/build.seo" ]; then
            echo "Error: No build.seo found in $target"
            echo "Are you in a Seoggi project directory?"
            exit 1
        fi
        echo "Building project in $target..."
        "$SEOGGI_ROOT/core/seoggi_bootstrap" "$target/build.seo"
        ;;

    "compile")
        if [ -z "$2" ]; then
            echo "Error: No file specified"
            echo "Usage: seo compile <file>"
            exit 1
        fi

        file=$(find_seo_file "$2")
        if [ $? -ne 0 ]; then
            echo "Error: Could not find Seoggi file: $2"
            echo "Looked in:"
            echo "  - Current directory"
            echo "  - $SEOGGI_ROOT/examples"
            exit 1
        fi

        echo "Compiling $file..."
        "$SEOGGI_ROOT/core/seoggi_bootstrap" --compile "$file"
        ;;

    "exec")
        if [ -z "$2" ]; then
            echo "Error: No file specified"
            echo "Usage: seo exec <file>"
            exit 1
        fi

        file=$(find_seo_file "$2")
        if [ $? -ne 0 ]; then
            echo "Error: Could not find Seoggi file: $2"
            echo "Looked in:"
            echo "  - Current directory"
            echo "  - $SEOGGI_ROOT/examples"
            exit 1
        fi

        echo "Running $file..."
        "$SEOGGI_ROOT/core/seoggi_bootstrap" "$file"
        ;;

    "run")
        if [ -z "$2" ]; then
            echo "Starting Seoggi REPL..."
            "$SEOGGI_ROOT/core/seoggi_bootstrap" --repl
        else
            file=$(find_seo_file "$2")
            if [ $? -ne 0 ]; then
                echo "Error: Could not find Seoggi file: $2"
                echo "Looked in:"
                echo "  - Current directory"
                echo "  - $SEOGGI_ROOT/examples"
                exit 1
            fi
            echo "Running $file..."
            "$SEOGGI_ROOT/core/seoggi_bootstrap" "$file"
        fi
        ;;

    "test")
        test_path="${2:-.}"  # Default to current directory if no path specified
        if [ ! -d "$test_path" ]; then
            echo "Error: Test path does not exist: $test_path"
            exit 1
        fi
        echo "Running tests in $test_path..."
        # Find all test files and run them
        find "$test_path" -name "*_test.seo" -type f | while read -r test_file; do
            echo "Testing $test_file..."
            "$SEOGGI_ROOT/core/seoggi_bootstrap" --test "$test_file"
        done
        ;;

    "version")
        echo "seo version 0.1.0"
        echo "Seoggi Command Line Tool"
        echo "Copyright (c) 2024 Jeremy Matlock (@daedaevibin)"
        echo "Licensed under YeonSphere Universal Open Source License (YUOSL)"
        ;;

    "help")
        show_usage
        ;;

    *)
        echo "Error: Unknown command '$1'"
        echo ""
        show_usage
        exit 1
        ;;
esac
